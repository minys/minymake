#!/bin/bash

[ -z "${TEST_SETUP_INCLUDE_GUARD}" ] ||
	return 0

export TEST_SETUP_INCLUDE_GUARD=1
export obj="a/main.o b/c/c.o b/d/d.o b/main.o c/c.o c/test_cc d/lib.o e/main.o e/test.o main.o"
export dep="main.d a/main.d b/main.d b/c/c.d b/d/d.d c/c.d d/lib.d e/main.d e/test.d"
export notes="main.gcno a/main.gcno b/main.gcno b/c/c.gcno b/d/d.gcno c/c.gcno d/lib.gcno e/main.gcno e/test.gcno"
export sha1=".compile.cc.sha1 .compile.cxx.sha1 .link.cc.sha1 .link.cxx.sha1"
export targets="a/program_a a/test_dupl b/program_b d/lib.so e/program_e e/test_program program"
export all="${obj} ${dep} ${notes} ${sha1} ${targets}"

interrupted ()
{
	PASSED=false
	FAILURE="tests were interrupted while executing \"${BASH_COMMAND}\""
	exit 1
}

teardown ()
{
	if [ -d "${tmpdir}" ]; then
		rm -rf ${tmpdir}
	fi

	make distclean >/dev/null 2>&1

	trap ERR INT EXIT
	set +o errexit

	if [ "${PASSED}" == 'true' ]; then
		printf '\n\e[1;32mPASSED\e[0m\n\n'
	else
		printf '\n\e[1;31m%s\e[0m %s\n\n' FAILED "${FAILURE:=while executing \"${BASH_COMMAND}\"}"
	fi
}

trap "PASSED=false" ERR
trap interrupted INT
trap teardown EXIT

cd ${CURDIR}/project
PASSED=true

set -o errexit

make distclean >/dev/null 2>&1
